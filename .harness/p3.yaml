pipeline:
  name: p3
  identifier: p3
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: DEV
        identifier: DEV
        blabla: "null"
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: |-
                          echo "hello world"
                          echo "stage.delegateSelectors = <+stage.delegateSelectors>"
                          echo "pipeline.delegateSelectors = <+pipeline.delegateSelectors>"
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
              - step:
                  type: TerraformPlan
                  name: TerraformPlan_1
                  identifier: TerraformPlan_1
                  spec:
                    provisionerIdentifier: <+input>
                    configuration:
                      command: Apply
                      configFiles:
                        store:
                          spec:
                            connectorRef: account.GitHub
                            gitFetchType: Commit
                            commitId: <+input>
                            folderPath: infra/main.tf
                          type: Github
                      secretManagerRef: account.harnessSecretManager
                      workspace: <+input>
                  timeout: 10m
              - step:
                  type: HarnessApproval
                  name: HarnessApproval_1
                  identifier: HarnessApproval_1
                  spec:
                    approvalMessage: Please review the following information and approve the pipeline progression
                    includePipelineExecutionHistory: true
                    approvers:
                      userGroups:
                        - _project_all_users
                      minimumCount: 1
                      disallowPipelineExecutor: false
                    approverInputs: []
                  timeout: 1d
              - step:
                  type: TerraformApply
                  name: TerraformApply_1
                  identifier: TerraformApply_1
                  spec:
                    provisionerIdentifier: <+input>
                    configuration:
                      type: InheritFromPlan
                  timeout: 10m
        tags: {}
        failureStrategies:
          - onFailure:
              errors: []
              action:
                type: Abort
